version: "3.6"

services:
  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build: ./api
    command: uvicorn api.app:app --host 0.0.0.0 --port 8000
    volumes:
      - ./api:/api
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASS}@db:5432/${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - OTP_SECRET=${OTP_SECRET}
      - API_DOMAIN_NAME=${API_DOMAIN_NAME}
      - OVH_APPLICATION_KEY=${OVH_APPLICATION_KEY}
      - OVH_APPLICATION_SECRET=${OVH_APPLICATION_SECRET}
      - OVH_CONSUMER_KEY=${OVH_CONSUMER_KEY}
      - TOKEN_EXPIRE_MINUTES=${TOKEN_EXPIRE_MINUTES}
    depends_on:
      - db

  web:
    build: ./web
    environment:
      - WEB_DOMAIN_NAME=${WEB_DOMAIN_NAME}
      - API_DOMAIN_NAME=${API_DOMAIN_NAME}
      - API_PORT=${API_PORT}
      - WEB_PORT=${WEB_PORT}
    volumes:
      - ./web/src:/app/src

  caddy:
    image: caddy:2-alpine
    command: caddy run
    working_dir: /etc/caddy
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    environment:
      - WEB_DOMAIN_NAME=${WEB_DOMAIN_NAME}
      - API_DOMAIN_NAME=${API_DOMAIN_NAME}
      - API_PORT=${API_PORT}
      - WEB_PORT=${WEB_PORT}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - web

volumes:
  caddy_data: {}
  caddy_config: {}
  postgres_data: {}
